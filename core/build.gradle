apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'maven-publish'

android {
    compileSdkVersion 29


    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            debuggable true
            minifyEnabled false
        }
        uat {
            debuggable true
            minifyEnabled false

        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.3.72"
    implementation "com.google.android.material:material:1.1.0"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.core:core-ktx:1.2.0'
    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    api 'com.google.android.material:material:1.1.0'
    api(
            "com.mikepenz:fastadapter:$fastAdapterVersion",
            "com.mikepenz:fastadapter-extensions-expandable:$fastAdapterVersion",
            "com.mikepenz:fastadapter-extensions-binding:$fastAdapterVersion",
            "com.mikepenz:fastadapter-extensions-diff:$fastAdapterVersion",
            "com.mikepenz:fastadapter-extensions-drag:$fastAdapterVersion",
            "com.mikepenz:fastadapter-extensions-paged:$fastAdapterVersion",
            "com.mikepenz:fastadapter-extensions-scroll:$fastAdapterVersion",
            "com.mikepenz:fastadapter-extensions-swipe:$fastAdapterVersion",
            "com.mikepenz:fastadapter-extensions-ui:$fastAdapterVersion",
            "com.mikepenz:fastadapter-extensions-utils:$fastAdapterVersion",
    )
    //paris to set views styles parametrically
    api 'com.airbnb.android:paris:1.4.0'
    api 'com.google.android.material:material:1.1.0'

}

def githubProperties = new Properties()
//Set env variable GPR_USER & GPR_API_KEY if not adding a properties file
githubProperties.load(new FileInputStream(rootProject.file("github.properties")))

def getVersionName = { ->
    return "0.1" // Replace with version Name
}

def getArtificatId = { ->
    return "core" // Replace with library name ID
}

publishing {
    publications {
        bar(MavenPublication) {
            groupId 'com.justclean.core'
            artifactId getArtificatId()
            version getVersionName()
            artifact("$buildDir/outputs/aar/${getArtificatId()}-release.aar")
        }
    }

    repositories {
        maven {
            name = "GitHubPackages"
            /** Configure path of your package repository on Github
             ** Replace GITHUB_USERID with your/organisation Github userID
             ** and REPOSITORY with the repository name on GitHub
             */
            url = uri("https://maven.pkg.github.com/justcleantech/justclean-android-core")
            credentials {
                /** Create github.properties in root project folder file with
                 ** gpr.usr=GITHUB_USER_ID & gpr.key=PERSONAL_ACCESS_TOKEN
                 ** Set env variable GPR_USER & GPR_API_KEY if not adding a properties file**/

                username = githubProperties['gpr.usr'] ?: System.getenv("GPR_USER")
                password = githubProperties['gpr.key'] ?: System.getenv("GPR_API_KEY")
            }
        }
    }
}
