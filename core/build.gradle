apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'maven-publish'
apply plugin: "androidx.navigation.safeargs.kotlin"
android {
    compileSdkVersion 29


    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
        resValue "string", "google_maps_key", "\"$googleMapsKey\""
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            debuggable true
            minifyEnabled false
        }
        uat {
            debuggable true
            minifyEnabled false

        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
}

dependencies {
    api fileTree(dir: 'libs', include: ['*.jar'])
    api "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.3.72"
    api "com.google.android.material:material:1.1.0"
    api 'androidx.appcompat:appcompat:1.1.0'
    api 'androidx.constraintlayout:constraintlayout:1.1.3'
    api 'androidx.core:core-ktx:1.3.0'
    api 'com.google.android.gms:play-services-maps:17.0.0'
    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    api 'com.google.android.material:material:1.2.0'
    api "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"
    api(
            "com.mikepenz:fastadapter:$fastAdapterVersion",
            "com.mikepenz:fastadapter-extensions-expandable:$fastAdapterVersion",
            "com.mikepenz:fastadapter-extensions-binding:$fastAdapterVersion",
            "com.mikepenz:fastadapter-extensions-diff:$fastAdapterVersion",
            "com.mikepenz:fastadapter-extensions-drag:$fastAdapterVersion",
            "com.mikepenz:fastadapter-extensions-paged:$fastAdapterVersion",
            "com.mikepenz:fastadapter-extensions-scroll:$fastAdapterVersion",
            "com.mikepenz:fastadapter-extensions-swipe:$fastAdapterVersion",
            "com.mikepenz:fastadapter-extensions-ui:$fastAdapterVersion",
            "com.mikepenz:fastadapter-extensions-utils:$fastAdapterVersion",
    )
    api(
            "org.koin:koin-androidx-ext:2.1.6",
            "org.koin:koin-androidx-viewmodel:2.1.6",
            "org.koin:koin-android:2.1.6"

    )
    //paris to set views styles parametrically
    api 'com.airbnb.android:paris:1.5.0'
    api 'com.google.android.material:material:1.2.0'
    api 'joda-time:joda-time:2.10.6'
    api 'com.akexorcist:localizationactivity:1.2.2'
    api 'com.mikepenz:materialize:1.2.0'

    api(
            // rx java
            "io.reactivex.rxjava2:rxjava:$rxjava2Version",
            "io.reactivex.rxjava2:rxandroid:$rxandroidVersion",
    )

    api(
            //retrofit
            "com.squareup.retrofit2:retrofit:$retrofitVersion",
            "com.squareup.retrofit2:converter-gson:$retrofitVersion",
            "com.squareup.retrofit2:adapter-rxjava2:$retrofitRxVersion",
            "com.squareup.okhttp3:okhttp:$okhttpVersion",
            "com.squareup.okhttp3:logging-interceptor:$okhttpVersion",
            debugImplementation("com.readystatesoftware.chuck:library:1.1.0"),
            uatImplementation("com.readystatesoftware.chuck:library:1.1.0"),

    )

    api(
            "androidx.navigation:navigation-fragment-ktx:$nav_version",
            "androidx.navigation:navigation-ui-ktx:$nav_version",
// i will add it after the version be stable now it's alpha
//            "androidx.navigation:navigation-dynamic-features-fragment:$nav_version",
//            "androidx.navigation:navigation-testing:$nav_version"
    )

    // switch button
    api "com.github.angads25:toggle:$switchButtonVersion"

    api "com.google.android.gms:play-services-location:17.0.0"


}

def githubProperties = new Properties()
//Set env variable GPR_USER & GPR_API_KEY if not adding a properties file
githubProperties.load(new FileInputStream(rootProject.file("github.properties")))

def getVersionName = { ->
    return "0.1" // Replace with version Name
}

def getArtificatId = { ->
    return "core" // Replace with library name ID
}

publishing {
    publications {
        bar(MavenPublication) {
            groupId 'com.justclean.core'
            artifactId getArtificatId()
            version getVersionName()
            artifact("$buildDir/outputs/aar/${getArtificatId()}-release.aar")
        }
    }

    repositories {
        maven {
            name = "GitHubPackages"
            /** Configure path of your package repository on Github
             ** Replace GITHUB_USERID with your/organisation Github userID
             ** and REPOSITORY with the repository name on GitHub
             */
            url = uri("https://maven.pkg.github.com/justcleantech/justclean-android-core")
            credentials {
                /** Create github.properties in root project folder file with
                 ** gpr.usr=GITHUB_USER_ID & gpr.key=PERSONAL_ACCESS_TOKEN
                 ** Set env variable GPR_USER & GPR_API_KEY if not adding a properties file**/

                username = githubProperties['gpr.usr'] ?: System.getenv("GPR_USER")
                password = githubProperties['gpr.key'] ?: System.getenv("GPR_API_KEY")
            }
        }
    }
}
